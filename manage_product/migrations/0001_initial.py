# Generated by Django 3.1.6 on 2021-06-06 17:24

from django.db import migrations, models
import django.db.models.deletion
import manage_product.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Articles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(null=True, verbose_name='Инструкция')),
            ],
            options={
                'verbose_name': 'Статья',
                'verbose_name_plural': 'Статьи',
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(default='email@email.ru', max_length=254, verbose_name='e-mail')),
            ],
            options={
                'verbose_name': 'Электронные почты',
                'verbose_name_plural': 'электронная почта',
            },
        ),
        migrations.CreateModel(
            name='FotoOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_email', models.EmailField(max_length=254, verbose_name='Email')),
                ('town', models.CharField(max_length=30, verbose_name='Город')),
                ('ed_institution', models.CharField(max_length=50, verbose_name='Номер школы/детского сада')),
                ('the_class', models.CharField(max_length=20, verbose_name='класс/группа')),
                ('foto_from_client', models.ImageField(upload_to=manage_product.models.FotoOrder.upload_path, verbose_name='Фото')),
                ('status', models.CharField(choices=[('check', 'Проверка'), ('verified', 'Проверенно')], default='check', max_length=15, verbose_name='Статус')),
                ('photo_available', models.BooleanField(default=False, verbose_name='Наличие фото')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.CreateModel(
            name='Town',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('town', models.CharField(max_length=50, verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Имя')),
                ('surname', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('patronymic', models.CharField(max_length=50, verbose_name='Отчество')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
            },
        ),
        migrations.CreateModel(
            name='ProductId',
            fields=[
                ('product_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Уникальный ID изделия')),
                ('img', models.ImageField(blank=True, null=True, upload_to=manage_product.models.ProductId.upload_path, verbose_name='Фото')),
                ('img_jpg', models.ImageField(blank=True, null=True, upload_to=manage_product.models.ProductId.upload_path, verbose_name='Фото для скачивания')),
                ('template', models.CharField(choices=[('1527', '1527'), ('1530', '1530'), ('1613', '1613'), ('2032', '2032'), ('2104', '2104'), ('2105', '2105'), ('2110', '2110'), ('4010', '4010'), ('4018', '4018'), ('4021', '4021'), ('4030', '4030'), ('5023', '5023'), ('6021', '6021'), ('1322', '1322'), ('1602', '1602')], default='1322', max_length=4, verbose_name='Номер шаблона')),
                ('payment_id', models.CharField(default=manage_product.models.ProductId.generate_pay_id, max_length=10, unique=True, verbose_name='id оплаты')),
                ('send_link_for_pay', models.BooleanField(default=False, verbose_name='Письмо на оплату')),
                ('paid', models.BooleanField(default=False, verbose_name='Оплачено')),
                ('created', models.BooleanField(default=False, verbose_name='Сверстанно')),
                ('completed', models.BooleanField(default=False, verbose_name='Изделие отправлено')),
                ('date_opening', models.DateField(auto_now_add=True, null=True, verbose_name='Дата принятия заказа')),
                ('date_payment', models.DateField(blank=True, null=True, verbose_name='Дата оплаты')),
                ('date_close', models.DateField(blank=True, null=True, verbose_name='Дата отправки заказа')),
                ('organisation', models.CharField(choices=[('school', 'Школа'), ('playschool', 'Детский сад')], default=1, max_length=100, verbose_name='Учебное заведение')),
                ('organisation_name', models.CharField(blank=True, default='1', max_length=50, verbose_name='Наименование')),
                ('product_link', models.CharField(blank=True, default='link', max_length=100, verbose_name='Ссылка на изделие')),
                ('note', models.TextField(blank=True, max_length=150, null=True, verbose_name='Примечание')),
                ('email', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='manage_product.email', verbose_name='e-mail клиента')),
                ('town', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='manage_product.town', verbose_name='Город')),
                ('worker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='manage_product.worker', verbose_name='Менеджер')),
            ],
            options={
                'verbose_name': 'Изделие',
                'verbose_name_plural': 'Изделия',
            },
        ),
    ]
